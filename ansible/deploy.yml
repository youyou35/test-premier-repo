---
- hosts: ioda
  remote_user: integration
  
#paramètres du playbook:
#  project_name: nom du répetoire racine du projet - défaut: unknown-project
#  project_path: path du répertoire racine du projet - défaut: /home/integration
#  target_env:  INT/PROD/etc ... utilisé pour le lien symbolique de conf - défaut: none
#  git_repository_url: url du repo git - défaut: none
#  git_branch:  nom de la branche git - défaut: master
#  git_tag_name: nom du tag git - défaut: none - Optionnel


#tags:
    # last_commit       : checkout du dernier commit de la branche
    # latest_tag        : checkout du dernier tag
    # git_tag           : checkout du tag {{git_tag_name}}

# exemple:  Pull le dernier commit et modifie le fichier de configuration
#           ansible-playbook deploy.yml --tags "last_commit,pos_conf"

  vars:
   target_env: none
   project_name: unknown-project
   project_path: /home/integration
   git_repository_url: https://github.com/youyou35/test-premier-repo.git
   git_branch: master
   git_tag_name: none

  tasks:
   # - fail: msg="Echec, ce playbook nécessite la définition du paramètre suivant [tag_version]"
   #   when: tag_version is undefined

   #git pull forcé sur la branche
   - name: Git pull (forcé)
     git: 
      repo="{{git_repository_url}}"
      dest="{{project_path}}/{{project_name}}"
      version="{{git_branch}}"
      force=yes
     tags:
      last_commit

   - name: get new tags from remote
     shell: "git fetch --tags"
     args:
       chdir: "{{project_path}}/{{project_name}}"
     tags:
      last_tag

   - name: get latest tag name
     shell: "git describe --tags `git rev-list --tags --max-count=1`"
     args:
       chdir: "{{project_path}}/{{project_name}}"
     register: latest_tag
     tags:
      last_tag

   - name: checkout du dernier tag
     git:
      repo="{{git_repository_url}}"
      dest="{{project_path}}/{{project_name}}"
      version="{{latest_tag.stdout}}"
      force=yes
     tags:
      last_tag

   - name: checkout du tag cible
     git:
      repo="{{git_repository_url}}"
      dest="{{project_path}}/{{project_name}}"
      version="{{git_tag_name}}"
      force=yes
     tags:
      git_tag

   #Dans tous les cas on gère la post-conf
   - name: Lien symbolique vers le fichier de conf qui va bien
     file: state=link 
      src={{target_env}}.conf.json
      dest=/home/integration/mon-api/api-rubriques-metier/src/main/resources/conf/conf.json
      force=yes
     tags:
      post_conf