---
- hosts: ioda
  remote_user: integration
  
#paramètres du playbook:
#  target_env (INT/PROD/etc ... utilisé pour le lien symbolique de conf)
#  lastest_tag=x
#	version_tag=v1.0.0 (optionnel, pour faire un git checkout sur un tag précis)
#  last_commit=x


  vars:
   ENV: INT
   module_name: mon-api
   project_path: /home/integration/{{module_name}}
   git_repository: https://github.com/youyou35/test-premier-repo.git
   git_branch: master

  tasks:
   # - fail: msg="Echec, ce playbook nécessite la définition du paramètre suivant [tag_version]"
   #   when: tag_version is undefined

   #git pull forcé sur le HEAD systématique
   - name: mon-api - Pull de la dernière version
     git: 
      repo="{{git_repository}}"
      dest="{{project_path}}"
      version="{{git_branch}}"
      force=yes
     when:
      last_commit is defined

   - name: get new tags from remote
     shell: "git fetch --tags"
     args:
       chdir: "{{project_path}}"
     when:
      last_tag is defined

   - name: get latest tag name
     shell: "git describe --tags `git rev-list --tags --max-count=1`"
     args:
       chdir: "{{project_path}}"
     register: latest_tag
     when:
      last_tag is defined

   - command: /bin/echo "{{latest_tag}}" 
     when:
      last_tag is defined

   - name: checkout du dernier tag
     git:
      repo="{{git_repository}}"
      dest="{{project_path}}"
      version="{{latest_tag.stdout}}"
      force=yes
     when:
      last_tag is defined

   - name: checkout du tag cible
     git:
      repo="{{git_repository}}"
      dest="{{project_path}}"
      version="{{version_tag}}"
      force=yes
     when:
      version_tag is defined

   #Dans tous les cas on gère la post-conf
   - name: Lien symbolique vers le fichier de conf qui va bien
     file: state=link 
      src={{ENV}}.conf.json
      dest=/home/integration/mon-api/api-rubriques-metier/src/main/resources/conf/conf.json
      force=yes

   # - name: Un test sur une variable passée en paramètre du playbook
   #   command: /bin/echo Déploiement du tag "{{tag_version}}"

   # - name: nouveau test
   #   command: /bin/echo Déploiement du tag "{{tag_version}}"